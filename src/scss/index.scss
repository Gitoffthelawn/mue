@import 'variables';
@import 'toast';

@tailwind base;
@tailwind components;
@tailwind utilities;

body {
  background: #000;
  margin: 0;
  overflow: hidden;
  text-rendering: optimizelegibility !important;
  -moz-text-rendering: optimizelegibility !important;
}

* {
  font-family: 'Lexend Deca Variable', 'Montserrat Variable', sans-serif !important;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  outline: none;
  box-sizing: initial;
}

#center {
  font-size: calc(10px + 2vmin);
  text-align: center;
  position: absolute;
  inset: 0;
  text-shadow: 0 0 25px rgb(0 0 0 / 30%);
  display: grid;
  place-items: center;
  margin: 0;

  #widgets {
    color: #fff;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: 20px;
    animation: fadeIn 1s;
  }

  &.no-textBorder {
    text-shadow: none !important;

    .quote {
      text-shadow: none !important;
    }
  }
}

::placeholder {
  @include themed {
    color: t($color);
  }

  opacity: 1;
}

#root {
  @include themed {
    color: t($color);
  }
}

/* accessibility */
.textBorder {
  filter: drop-shadow(var(--shadow-shift) var(--shadow-shift) 0 #111c);
}

.no-animations {
  .ReactModal__Content,
  button,
  svg,
  input[type='text'],
  .MuiSwitch-switchBase,
  .tooltipTitle,
  .quicklinks-container img {
    transition: none !important;
  }
}

.frame {
  width: 100%;
  height: 100%;
}

/* error */
.criticalError {
  display: grid;
  place-items: center;
  width: 100vw;
  height: 100vh;

  .criticalError-actions {
    display: flex;
    flex-flow: row;
    gap: 20px;
  }

  button,
  a {
    border: 0;
    border-radius: 12px;
    padding: 10px 30px;
    font-size: 1rem;
    display: flex;
    align-items: center;
    flex-flow: row;
    justify-content: center;
    gap: 20px;
    transition: 0.5s;
    cursor: pointer;
    text-decoration: none;
  }
}

/* light theme critical error */
@media (prefers-color-scheme: dark) {
  body {
    background-color: #000;
  }

  .criticalError {
    .criticalError-message {
      color: #fff;
    }

    p {
      color: rgb(255 255 255 / 75.3%);
    }

    a {
      background: #0e1013;
      box-shadow: 0 0 0 1px #484848;
      color: #fff;

      &:hover {
        background: #1e1e1e;
      }
    }
  }
}

@media (prefers-color-scheme: light) {
  body {
    background-color: #fff;
  }

  .criticalError {
    .criticalError-message {
      color: #000;
    }

    p {
      color: rgb(0 0 0 / 75.3%);
    }

    a {
      background: #fdfdfd;
      box-shadow: 0 0 0 1px #484848;
      color: #000;

      &:hover {
        background: #f5f5f5;
      }
    }
  }
}

// credit to Kendrick Arnett https://codepen.io/kendrick/pen/WxNwdE
.light {
  .pulse {
    height: 100%;
    width: 100%;
    background: linear-gradient(-90deg, #efefef 0%, #ccc 50%, #efefef 100%);
    background-size: 400% 400%;
    animation: pulse 1.2s ease-in-out infinite;

    @keyframes pulse {
      0% {
        background-position: 0% 0%;
      }

      100% {
        background-position: -135% 0%;
      }
    }
  }
}

.dark {
  .pulse {
    height: 100%;
    width: 100%;
    background: linear-gradient(-90deg, #000 0%, rgb(83 83 83) 50%, #000 100%);
    background-size: 400% 400%;
    animation: pulse 1.2s ease-in-out infinite;

    @keyframes pulse {
      0% {
        background-position: 0% 0%;
      }

      100% {
        background-position: -135% 0%;
      }
    }
  }
}

.modal-clamp-width {
  width: clamp(60vw, 1400px, 90vw);
}

@media (prefers-reduced-motion: reduce) {
  * {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
